关系型数据库：mysql、sqlite、oracle
	1.mysql：python2----->MySQLdb
		 python3----->pymysql
	2.sqlite：小型数据库，安卓手机中的数据库就采用sqlite

关系型数据库遵循ACID（酸性）规则：
	1.A：atomicity，原子性
	2.C：consistency，一致性
	3.I：isolation，独立性	
	4.D：durability，持久性

----------------------------------------------------------------------------------
20171206 星期三 MongoDB
MongoDB：介于非关系型数据库和关系型数据库之间的产品，是非关系型数据库中功能最丰富，
	 最像关系型数据库的。MongoDB是一种基于分布式文件存储的数据库，C++编写

分布式系统：（distributed system）建立在网络之上的软件系统，因为软件的特性，所以分布式系统具有
	     高内聚性和透明性。
	     因此，网络和分布式系统的区别更多在高层软件（特别是操作系统），而不是硬件。
	     分布式系统可以应用在：Pc、工作站、局域网、广域网
    分布式计算的优缺点：
    优点：
	1.可靠性：一台服务器损坏不影响其他机器
	2.可拓展性：可以根据需要增加机器
	3.资源共享
	4.灵活性
	5.更快的速度
	6.开放系统
	7.更高的性能：比集中式计算机网络集群性价比更高（集群上每台机器执行完整的程序）
		
    缺点：
	1.故障排除：多台机器不知道哪台机器和主机交接出错
	2.软件：软件支持很少
	3.网络：网络基础设施的问题，包括：传输问题、高负载、信息丢失。
	4.安全性：由于是开放系统，安全性和共享风险存在。

NoSQL ：not only sql，非关系型数据库，是对不同于传统的关系型数据库的数据库管理系统的统称。
	NoSQL用于超大规模的数据存储,存储无需固定模式，可方便的横向扩展。

----------------------------------------------------------------------------------------
RDBMS vs NoSQL

RDBMS
   - 高度组织化结构化数据
   - 结构化查询语言（SQL） (SQL)
   - 数据和关系都存储在单独的表中。
   - 数据操纵语言，数据定义语言
   - 严格的一致性
   - 基础事务

NoSQL
   - 代表着不仅仅是SQL
   - 没有声明性查询语言
   - 没有预定义的模式
   - 键 - 值对存储，列存储，文档存储，图形数据库
   - 最终一致性，而非ACID属性
   - 非结构化和不可预知的数据
   - CAP定理
   - 高性能，高可用性和可伸缩性
---------------------------------------------------------------------------------------
CAP定理：又称为“布鲁斯定理”，它指出对于一个分布式计算系统来说，不可能同时满足以下三点:

    一致性(Consistency) (所有节点在同一时间具有相同的数据)
    可用性(Availability) (保证每个请求不管成功或者失败都有响应)
    分隔容忍(Partition tolerance) (系统中任意信息的丢失或失败不会影响系统的继续运作)

因此，根据 CAP 原理将 NoSQL 数据库分成了满足 CA 原则、满足 CP 原则和满足 AP 原则三 大类：

    CA - 单点集群，满足一致性，可用性的系统，通常在可扩展性上不太强大。
    CP - 满足一致性，分区容忍性的系统，通常性能不是特别高。
    AP - 满足可用性，分区容忍性的系统，通常可能对一致性要求低一些。

NoSQL的优点/缺点

优点:

    - 高可扩展性
    - 分布式计算
    - 低成本
    - 架构的灵活性，半结构化数据
    - 没有复杂的关系 

缺点:

    - 没有标准化
    - 有限的查询功能（到目前为止）
    - 最终一致是不直观的程序
	

**************************************************************************************************

一、安装MongoDB：
	1.下载网址：https://www.mongodb.com/download-center#atlas
	2.下载好后安装到自定义文件夹，记住该文件夹，默认路径为：
		C:\Program Files\MongoDB\Server\3.4
	3.配置环境变量：C:\Program Files\MongoDB\Server\3.4\bin;
	4.这时候输入cmd命令下输入mongo，发现连接失败，解决办法：
	 	1.cmd中输入：
			mongod --dbpath "D:\mongodb\data\db" --logpath "D:\mongodb\data\log.txt" 
		  	此时该cmd窗口为创建的mongodb服务器，再打开一个cmd窗口，输入mongo，连接成功！
		2.创建一个文件，后缀改为bat（自动连接应用服务的文件），里面的内容写为：
			mongod --dbpath "D:\mongodb\data\db" --logpath "D:\mongodb\data\log.txt" 
			此时和上面的效果一样，也是一次性服务
		3.创建永久服务，在bat文件后加 --install，意思是在添加到应用服务队列中，即永久添加。
			cmd下输入：services.msc可打开服务查看，可以找到MongoDB，即创建永久服务成功，
			选择开启方式，自动为开机自启，本次需手动开启。
		
**************************************************************************************************

二、MongoDB操作
------------------------------------------------------------------
基本操作
	1.show dbs  
	2.db			   //查看当前库名
	3.use 库名                 //不存在自动创建
	4.db.dropDatabase()	   //删除库（在当前库下删除）
	5.show collections	   //查找当前库下集合
---------------------------------------------------------------
查找
	1.db.表名.find()                //查找全部
	2.db.表名.find().pretty()       //以标准格式展示
	3.db.表名.find(条件).pretty()   //具体查找

    例：
	and查找：db.python.find({"likes":100,"title":"python"}).pretty()
	or查找：db.python.find({$or:[{"likes":50},{"title":"python"}]}).pretty()
	and+or查找（使用json格式）：
db.python.find({
	"title":"php",
	$or:[
	{"likes":50},
	{"likes":100}
]
}).pretty()
----------------------------------------------------------------
条件语句：
	1.等于：{key:value}，如{"likes":100}
	2.小于：{key:{$lt:value}}，如{"likes":{$lt:100}}  //条件：likes小于100
	3.大于：{key:{$gt:value}}
	4.小于等于：{key:{$lte:value}}
	5.大于等于：{key:{$gte:value}}
	6.不等于：{key:{$ne:value}}
-----------------------------------------------------------------------
插入
	1.db.表名.insert（{...}）   
	2.db.表名.save（{"_id":xxx,更新内容}）     //输入id更新，id找不到则插入新一行
-----------------------------------------------------------------------
更新
	1.db.表名.update（{条件，更新内容，可选条件}）
	2.db.表名.save（{"_id":xxx，更新内容}）
-----------------------------------------------------------------------
删除
	1.db.表名.remove（{}）          //清除表
	2.db.表名.remove（{条件}）      //删除符合条件的document（行） 

**************************************************************************************************

三、python操作mongodb
**************************************************************************************************

1.建立连接三种方式
	client=pymongo.Mongoclient() 		 	 //什么都不写默认为本地，默认端口27017
	client=pymongo.Mongoclient("localhost",27017)    //localhost为本地，也可写本地ip
	client=pymongo.Mongoclient("mongodb://192.168.0.100:27017")  //mongodb协议
2.获取数据库
	db1=client.qq
	db2=client[qq]		
	//上面两种方式均可，qq库不存在则创建
3.获取集合
	c=db1.cc
	collection2=db1[cc]
	//上面两种方式均可，cc集合不存在则创建
4.增删改查
    1.插入
	插入一条
		dic={...}
		id=c.insert(dic)  返回id
	插入多条
		list=[{...},{...},...]
		ids=c.insert(list)  返回id列表

    2.删除
	c.remove({条件})

    3.修改
	c.update({条件}:{"$set":{条件}})

    4.查询
	查询一条，如果查询多条只显示第一条
		f=c.find_one({条件})
	查询多条，返回一个cursor游标，遍历获取
		ff=c.find({条件})
	结合聚合函数
		ff=c.find({条件}).count()			













	
